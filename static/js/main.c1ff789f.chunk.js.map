{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","upText","toUpperCase","showAlert","lowText","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newText","split","join","filter","element","defaultProps","about","Alert","height","alert","role","word","lower","charAt","slice","capitalise","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c1ff789f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\"></a>\r\n                    </li>\r\n                </ul>\r\n                {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"TextPlay\",\r\n    about: \"About Text\"\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"Event Changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleUpClick = () => {\r\n        // console.log(\"handleUpClick clicked\");\r\n        const upText = text.toUpperCase();\r\n        setText(upText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        // console.log(\"handleUpClick clicked\");\r\n        const lowText = text.toLowerCase();\r\n        setText(lowText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'} mx-1 my-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'} mx-1 my-1`} onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'} mx-1 my-1`} onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'} mx-1 my-1`} onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} type=\"button\" className={`btn btn-${props.mode==='light'?'dark':'light'} mx-1 my-1`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalise = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalise(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n  }, 1500);\n  }\n  const toggleMode = () => {\n    if(mode==='light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"PlayWithText - Dark Mode\";\n      // setTimeout(()=> {\n      //   document.title = \"PlaywithText is Amazing\";\n      // },3000);\n      // setTimeout(()=> {\n      //   document.title = \"Install it now\";\n      // },1500);\n    }\n    else\n    {      \n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"PlayWithText - Light Mode\";\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"PlayWithText\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <TextForm heading=\"Try PlayWithText - word counter, character counter, remove extra spaces\" showAlert={showAlert} mode={mode} />\n      </div>\n      {/* <Routes> */}\n        {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route path=\"about\" element={<About />}> */}\n          {/* </Route> */}\n          {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}> */}\n          {/* </Route> */}\n        {/* <About/> */}\n      {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}